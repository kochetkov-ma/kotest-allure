import static org.jetbrains.kotlin.gradle.dsl.JvmTarget.JVM_11

plugins {
    id 'idea'
    id 'signing'
    id 'maven-publish'

    id 'org.jetbrains.kotlin.jvm' version "$kotlinVersion"
    id 'io.qameta.allure' version "$allurePluginVersion"
    id 'io.codearte.nexus-staging' version "$nexusStagingPluginVersion"
    id 'com.github.ben-manes.versions' version "$benManesPluginVersion"
    id 'ru.iopump.qa.allure' version "$allureServerPluginVersion"
}
group 'ru.iopump.kotest'

apply from: "$rootDir/gradle/publishing.gradle"

kotlin {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    compilerOptions {
        jvmTarget = JVM_11
    }
}

wrapper {
    gradleVersion = "$gradleWrapperVersion"
    doLast { delete "$projectDir/gradlew.bat", "$projectDir/gradlew" }
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation("io.kotest:kotest-framework-api:$kotestVersion") { exclude group: 'org.jetbrains.kotlin' }
    implementation("io.kotest:kotest-framework-engine-jvm:$kotestVersion") { exclude group: 'org.jetbrains.kotlin' }

    api "org.opentest4j:opentest4j:$opentest4jVersion"
    api "io.qameta.allure:allure-java-commons:$allureVersion"

    testImplementation "io.kotest:kotest-property:$kotestVersion"
    testImplementation "io.kotest:kotest-framework-datatest:$kotestVersion"
    testImplementation "org.slf4j:slf4j-simple:$slf4jVersion"
    testImplementation("io.kotest:kotest-runner-junit5-jvm:$kotestVersion") {
        exclude group: 'org.jetbrains.kotlin'
        exclude group: 'io.mockk'
    }
}

test {
    systemProperty "allure.results.directory", file("$layout.buildDirectory/allure-results")
    useJUnitPlatform()
    systemProperty "kotest.framework.dump.config", "true"
}

allure {
    adapter {
        allureJavaVersion = allureVersion
        autoconfigureListeners = false
        aspectjWeaver = true
        version = allureVersion
        aspectjVersion = aspectJVersion
        frameworks {
            junit5 {
                enabled = false
            }
        }
    }
}

dependencyUpdates {
    gradleReleaseChannel = 'current'
}

tasks.register("cleanAllureResult") {
    group = 'verification'
    doLast {
        delete "$layout.buildDirectory/allure-results"
    }
}

allureServer {
    relativeResultDir = 'build/allure-results'
    allureServerUrl = 'https://allure.iopump.ru'
}